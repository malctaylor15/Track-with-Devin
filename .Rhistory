track_data <- read.csv("directathletics (9).csv")
head(track_data)
View(track_data)
View(track_data)
track_data[2,]
track_data_raw <- read.csv("directathletics (9).csv")
head(track_data)
track_data[2,]
head(track_data_raw)
track_data_raw[2,]
track_data_raw[2,6]
track_data_raw$Name[2]
colnames(track_data_raw)
string <- "abcd"
string2 <- string[-3]
string2 <- string[1]
string2 <- substring(string,3)
?sub
?substring
string <- track_data_raw$compiled.href[[1]]
string <- as.character(track_data_raw$compiled.href[[1]])
string2 <- substring(string,52, 54)
string2 <- substring(string,53, 54)
string2 <- substring(string,53, 53)
track_data_raw$Gender <- as.character(substring(track_data_raw$compiled.href,53,53))
summary(track_data_raw$Name)
hist(track_data_raw$Time)
hist(as.numeric(track_data_raw$Time))
length(as.numeric(track_data_raw$Time) != 0)
length(as.numeric(track_data_raw$Time) != '')
length((track_data_raw$Time) != '')
length((track_data_raw$Time) != ' ')
track_data_raw$Name[2]
as.character(track_data_raw$Name[2])
length(as.character(track_data_raw$Time) != '')
length(as.character(track_data_raw$Time) != "")
length(as.character(track_data_raw$Name) != "")
as.character(track_data_raw$Name[2])
as.character(track_data_raw$Name
)
length(as.character(track_data_raw$Name) != ",")
nrow(as.character(track_data_raw$Name) != ",")
length(which(as.character(track_data_raw$Name) != ","))
length(which(as.character(track_data_raw$Name) != ""))
data_clean1 <- track_data_raw
summary(data_clean1)
data_clean1$Gender <- substring(data_clean1$compiled.href, 53, 53)
data_clean1$Gender <- ifelse(data_clean1$Gender == 'm', 1, 0)
summary(data_clean1$Gender)
summary(track_data_raw$Name)
data_clean1$Time <- as.numeric(data_clean1$Time)
data_clean1$Distance <- as.character(data_clean1$Distance)
length(which(
data_clean1$Time == NA
))
length(which(
data_clean1$Time == "NA"
))
summary(data_clean1$Time)
length(which(
data_clean1$Time == "1.0"
))
length(which(
data_clean1$Time == "1"
))
data_clean1$Time <- as.character(data_clean1$Time)
track_data_raw <- read.csv("directathletics (9).csv")
data_clean1 <- track_data_raw
colnames(track_data_raw)
summary(data_clean1)
data_clean1$Time <- as.character(data_clean1$Time)
length(which(
data_clean1$Time == ""
))
length(which(
data_clean1$Distance == ""
))
662+790
length(which(
data_clean1$Distance == "" & data_clean1$Time == ""
))
length(which(
data_clean1$Distance != "" & data_clean1$Time != ""
))
length(which(
data_clean1$Distance != "" || data_clean1$Time != ""
))
length(which(
data_clean1$Distance != "" | data_clean1$Time != ""
))
length(which(
data_clean1$Distance == "" & data_clean1$Time == ""
))
1236+108
length(which(
data_clean1$Distance != ""
))
length(which(data_clean1$Time == ""
))
554+662
# Combined number of "good" observations
length(which(
data_clean1$Distance != "" | data_clean1$Time != ""
))
# Blanks
length(which(
data_clean1$Distance == "" & data_clean1$Time == ""
))
# Number of jump observations
length(which(
data_clean1$Distance != ""
))
# Number of track observations
length(which(data_clean1$Time == ""
))
length(which(
data_clean1$Distance != "" & data_clean1$Time != ""
))
662+554
length(which(
data_clean1$Name == ""
))
time_rows <- which(data_clean1$Time != "")
time_data <- track_data_raw[time_rows, ]
colnames(data_clean)
colnames(data_clean1)
data_clean1$compiled.href <- as.character(data_clean1$compiled.href)
data_clean1$Gender <- substring(data_clean1$compiled.href, 53, 53)
summary(data_clean1$Gender)
data_clean1$Gender <- ifelse(data_clean1$Gender == 'm', 1, 0)
time_rows <- which(data_clean1$Time != "")
time_cols <- c("ï..meet", "Gender", "Overall", "Name", "Year", "Team", "Time")
time_data <- time_data[ , time_cols, drop = FALSE]
time_data1 <- time_data[ , time_cols, drop = FALSE]
time_cols <- c( "Gender", "Overall", "Name", "Year", "Team", "Time")
time_data1 <- time_data[ , time_cols, drop = FALSE]
time_rows <- which(data_clean1$Time != "")
time_data <- track_data_raw[time_rows, ]
time_cols <- c("ï..meet", "Gender", "Overall", "Name", "Year", "Team", "Time")
time_data1 <- time_data[ , time_cols, drop = FALSE]
colnames(time_data)
data_clean1$compiled.href <- as.character(data_clean1$compiled.href)
data_clean1$Gender <- substring(data_clean1$compiled.href, 53, 53)
# Recode Gender 1 if male, 0 if female
data_clean1$Gender <- ifelse(data_clean1$Gender == 'm', 1, 0)
summary(data_clean1$Gender)
time_rows <- which(data_clean1$Time != "")
time_data <- track_data_raw[time_rows, ]
time_cols <- c("ï..meet", "Gender", "Overall", "Name", "Year", "Team", "Time")
time_data1 <- time_data[ , time_cols, drop = FALSE]
colnames(time_data)
time_data <- data_clean1time_rows, ]
time_cols <- c("ï..meet", "Gender", "Overall", "Name", "Year", "Team", "Time")
time_data <- data_clean1[time_rows, ]
time_cols <- c("ï..meet", "Gender", "Overall", "Name", "Year", "Team", "Time")
time_data1 <- time_data[ , time_cols, drop = FALSE]
summary(time_data$Time)
summary(as.factor(time_data$Time))
length(which(data_clean1$Time = "DNS"))
length(which(data_clean1$Time == "DNS"))
remove_time_rows <- which(data_clean1$Time == "DNS" | data_clean1$Time == "null")
time_data <- time_data[ , time_cols, drop = FALSE]
time_data2 <- time_data1[-remove_time_rows, ]
time_data2$Time <- as.numeric(time_data2$Time)
length(as.numeric(time_data2$Time) == NA)
length(as.double(time_data2$Time) == NA)
hist(time_data2$Time)
hist(time_data2$Time, breaks = 30)
hist(time_data2$Time, breaks = 40)
mean(time_data2$Time[time_data2$Time < 10])
mean(as.numeric(time_data2$Time[time_data2$Time < 10]))
mean(time_data2$Time[time_data2$Time < 10], na.rm = TRUE)
mean(time_data2$Time[time_data2$Time > 10], na.rm = TRUE)
(low_mean_time <- mean(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(high_mean_time <- mean(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
(low_sd_time <- sd(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(high_sd_time <- sd(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
abline(v = c(low_mean_time, high_mean_time), col = "red", "blue")
abline(v = c(low_mean_time, high_mean_time), col = "r", "b")
abline(v = c(low_mean_time, high_mean_time), col = c("r", "b"))
abline(v = c(low_mean_time, high_mean_time), col = c("red", "blue"))
abline(v = c(low_mean_time, high_mean_time), col = c("red", "blue"), lwd = 3)
hist(time_data2$Time, breaks = 40, probability = T)
(low_mean_time <- mean(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(low_sd_time <- sd(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(high_mean_time <- mean(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
(high_sd_time <- sd(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
abline(v = c(low_mean_time, high_mean_time), col = c("red", "blue"), lwd = 3)
?dnorm
low_norm_den <- dnorm(seq(0,15,length = 1000), mean = low_mean_time, sd = low_sd_time)
lines(seq(0,15,length = 1000), low_norm_den)
hist(time_data2$Time, breaks = 40, probability = T)
hist(time_data2$Time, breaks = 40)
lines(seq(0,15,length = 1000), low_norm_den)
probability = T
hist(time_data2$Time, breaks = 40, probability = T)
(low_mean_time <- mean(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(low_sd_time <- sd(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(high_mean_time <- mean(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
(high_sd_time <- sd(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
abline(v = c(low_mean_time, high_mean_time), col = c("red", "blue"), lwd = 3)
low_norm_den <- dnorm(seq(0,15,length = 1000), mean = low_mean_time, sd = low_sd_time)
lines(seq(0,15,length = 1000), low_norm_den)
?hist
hist(time_data2$Time, breaks = 40, probability = T, ylim = c(0, 0.5))
(low_mean_time <- mean(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(low_sd_time <- sd(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(high_sd_time <- sd(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
(high_mean_time <- mean(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
abline(v = c(low_mean_time, high_mean_time), col = c("red", "blue"), lwd = 3)
low_norm_den <- dnorm(seq(0,15,length = 1000), mean = low_mean_time, sd = low_sd_time)
lines(seq(0,15,length = 1000), low_norm_den)
max(low_norm_den)
low_norm_den <- dnorm(seq(5,20,length = 1000), mean = high_mean_time, sd = high_sd_time)
high_norm_den <- dnorm(seq(5,20,length = 1000), mean = high_mean_time, sd = high_sd_time)
max(high_norm_den)
lines(seq(5,20,length = 1000), high_norm_den, lwd = 2, lty = 4)
hist(time_data2$Time, breaks = 40, probability = T, ylim = c(0, 0.65))
(low_mean_time <- mean(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(low_sd_time <- sd(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(high_mean_time <- mean(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
(high_sd_time <- sd(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
abline(v = c(low_mean_time, high_mean_time), col = c("red", "blue"), lwd = 3)
low_norm_den <- dnorm(seq(0,15,length = 1000), mean = low_mean_time, sd = low_sd_time)
lines(seq(0,15,length = 1000), low_norm_den)
high_norm_den <- dnorm(seq(5,20,length = 1000), mean = high_mean_time, sd = high_sd_time)
lines(seq(5,20,length = 1000), high_norm_den, lwd = 2, lty = 4)
lines(seq(5,20,length = 1000), high_norm_den, lwd = 2, lty = 4, col = "cyan")
lines(seq(0,15,length = 1000), low_norm_den, lwd = 2, lty = 4, col = "orange")
legend("upperright", c("Low Mean", "High Mean") ,col = c("red", "blue"), lwd = 3)
legend("topright", c("Low Mean", "High Mean") ,col = c("red", "blue"), lwd = 3)
hist(time_data2$Time, breaks = 40, probability = T, ylim = c(0, 0.65),
main = "Distribution of Times ")
(low_mean_time <- mean(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(low_sd_time <- sd(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(high_mean_time <- mean(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
(high_sd_time <- sd(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
abline(v = c(low_mean_time, high_mean_time), col = c("red", "blue"), lwd = 3)
low_norm_den <- dnorm(seq(0,15,length = 1000), mean = low_mean_time, sd = low_sd_time)
lines(seq(0,15,length = 1000), low_norm_den, lwd = 2, lty = 4, col = "orange")
high_norm_den <- dnorm(seq(5,20,length = 1000), mean = high_mean_time, sd = high_sd_time)
lines(seq(5,20,length = 1000), high_norm_den, lwd = 2, lty = 4, col = "cyan")
legend("topright", c("Low Mean", "High Mean") ,col = c("red", "blue"), lwd = 3)
track_data_raw <- read.csv("directathletics (9).csv")
data_clean1 <- track_data_raw
colnames(track_data_raw)
summary(data_clean1)
data_clean1$Name <- as.character(data_clean1$Name)
length(which(
data_clean1$Name == ""
))
data_clean1$Time <- as.character(data_clean1$Time)
data_clean1$Distance <- as.character(data_clean1$Distance)
length(which(
data_clean1$Distance != "" | data_clean1$Time != ""
))
length(which(
data_clean1$Distance == "" & data_clean1$Time == ""
))
length(which(
data_clean1$Distance != ""
))
length(which(data_clean1$Time == ""
))
length(which(
data_clean1$Distance != "" & data_clean1$Time != ""
))
data_clean1$compiled.href <- as.character(data_clean1$compiled.href)
data_clean1$Gender <- substring(data_clean1$compiled.href, 53, 53)
data_clean1$Gender <- ifelse(data_clean1$Gender == 'm', 1, 0)
summary(data_clean1$Gender)
time_rows <- which(data_clean1$Time != "")
time_data <- data_clean1[time_rows, ]
time_cols <- c("ï..meet", "Gender", "Overall", "Name", "Year", "Team", "Time")
time_data1 <- time_data[ , time_cols, drop = FALSE]
length(which(data_clean1$Time == "DNS"))
length(which(data_clean1$Time == "null"))
remove_time_rows <- which(data_clean1$Time == "DNS" | data_clean1$Time == "null")
time_data2 <- time_data1[-remove_time_rows, ]
length(as.double(time_data2$Time) == NA)
time_data2$Time <- as.numeric(time_data2$Time)
hist(time_data2$Time, breaks = 40, probability = T, ylim = c(0, 0.65),
main = "Distribution of Times ")
(low_mean_time <- mean(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(low_sd_time <- sd(time_data2$Time[time_data2$Time < 10], na.rm = TRUE))
(high_mean_time <- mean(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
(high_sd_time <- sd(time_data2$Time[time_data2$Time > 10], na.rm = TRUE))
abline(v = c(low_mean_time, high_mean_time), col = c("red", "blue"), lwd = 3)
low_norm_den <- dnorm(seq(0,15,length = 1000), mean = low_mean_time, sd = low_sd_time)
lines(seq(0,15,length = 1000), low_norm_den, lwd = 2, lty = 4, col = "orange")
high_norm_den <- dnorm(seq(5,20,length = 1000), mean = high_mean_time, sd = high_sd_time)
lines(seq(5,20,length = 1000), high_norm_den, lwd = 2, lty = 4, col = "cyan")
legend("topright", c("Low Mean", "High Mean") ,col = c("red", "blue"), lwd = 3)
